<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gromero.Utilidades</name>
    </assembly>
    <members>
        <member name="T:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto">
            <summary>
            The EventosEnTexto Configuration Section.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.EventosEnTextoSectionName">
            <summary>
            The XML name of the EventosEnTexto Configuration Section.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.XmlnsPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.Xmlns"/> property.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.GrabarLogPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.GrabarLog"/> property.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.RutaLogPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.RutaLog"/> property.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.NombreAplicacionPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.NombreAplicacion"/> property.
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.IsReadOnly">
            <summary>
            Gets a value indicating whether the element is read-only.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.Instance">
            <summary>
            Gets the EventosEnTexto instance.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.Xmlns">
            <summary>
            Gets the XML namespace of this Configuration Section.
            </summary>
            <remarks>
            This property makes sure that if the configuration file contains the XML namespace,
            the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
            </remarks>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.GrabarLog">
            <summary>
            Gets or sets activa o Desactiva el registro
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.RutaLog">
            <summary>
            Gets or sets ruta del Archivo Log
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnTexto.NombreAplicacion">
            <summary>
            Gets or sets nombre de la Aplicación
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Configuraciones.EventosEnBD">
            <summary>
            The EventosEnBD Configuration Section.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.EventosEnBDSectionName">
            <summary>
            The XML name of the EventosEnBD Configuration Section.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.XmlnsPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.Xmlns"/> property.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.ConexionPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.Conexion"/> property.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.GrabarLogPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.GrabarLog"/> property.
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.NombreAplicacionPropertyName">
            <summary>
            The XML name of the <see cref="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.NombreAplicacion"/> property.
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.IsReadOnly">
            <summary>
            Gets a value indicating whether the element is read-only.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.Instance">
            <summary>
            Gets the EventosEnBD instance.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.Xmlns">
            <summary>
            Gets the XML namespace of this Configuration Section.
            </summary>
            <remarks>
            This property makes sure that if the configuration file contains the XML namespace,
            the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
            </remarks>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.Conexion">
            <summary>
            Gets or sets nombre de la Conexion SQL
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.GrabarLog">
            <summary>
            Gets or sets activa o Desactiva el registro
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Configuraciones.EventosEnBD.NombreAplicacion">
            <summary>
            Gets or sets nombre de la Aplicación
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.Colecciones">
            <summary>
            Contiene funciones de extensión que
            permiten modificar colecciones genéricas
            </summary>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.Colecciones.MoveDown``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Mueve un elemento hacia abajo en la colección en base al índice
            </summary>
            <typeparam name="T">Coleccion</typeparam>
            <param name="source">Instancia de la colección</param>
            <param name="index">Índice que se moverá</param>
            <returns>Retorna la colección modificada</returns>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.Colecciones.MoveDown``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Mueve un elemento hacia abajo en la colección en base a la instancia
            </summary>
            <typeparam name="T">Colección</typeparam>
            <param name="source">Instancia de la colección</param>
            <param name="item">Elemento que se moverá</param>
            <returns>Retorna la colección modificada</returns>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.Colecciones.MoveUp``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Mueve un elemento hacia arriba en la colección en base al índice
            </summary>
            <typeparam name="T">Colección</typeparam>
            <param name="source">Instancia de la colección</param>
            <param name="index">Indice que se moverá</param>
            <returns>Retorna la colección modificada</returns>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.Colecciones.MoveUp``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Mueve un elemento hacia arriba en la colección en base a la instancia
            </summary>
            <typeparam name="T">Colección</typeparam>
            <param name="source">Instancia de la colección</param>
            <param name="item">Elemento que se moverá</param>
            <returns>Retorna la colección modificada</returns>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.Colecciones.Swap``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Intercambia la posición de los elementos en una colección
            </summary>
            <typeparam name="T">Colección</typeparam>
            <param name="source">Instancia de la colección</param>
            <param name="firstIndex">Primer índice</param>
            <param name="secondIndex">Segundo índice</param>
            <returns>Retorna la colección modificada</returns>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.Colecciones.Swap``1(``0[],System.Int32,System.Int32)">
            <summary>
            Intercambia la posición de los elementos en una colección
            </summary>
            <typeparam name="T">Colección</typeparam>
            <param name="array">Array de la colección</param>
            <param name="firstIndex">Primer índice</param>
            <param name="secondIndex">Segundo índice</param>
            <returns>Retorna la colección modificada</returns>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.Colecciones.Swap``1(System.Collections.Generic.IEnumerable{``0},``0,``0)">
            <summary>
            Intercambia la posición de los elementos en una colección
            </summary>
            <typeparam name="T">Colección</typeparam>
            <param name="source">Instancia de la colección</param>
            <param name="firstItem">Primer elemento</param>
            <param name="secondItem">Segundo elemento</param>
            <returns>Retorna la colección modificada</returns>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.StringCase">
            <summary>
            Enumeracion que define como devolverá el Texto Aleatorio
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Data.StringCase.None">
            <summary>
            No hay diferencia para el Case
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Data.StringCase.Upper">
            <summary>
            Todo en Mayusculas
            </summary>
        </member>
        <member name="F:ErickOrlando.Utilidades.Data.StringCase.Lower">
            <summary>
            Todo en minusculas
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.DataGenerator">
            <summary>
            Generador de Data Aleatoria
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.#ctor">
            <summary>
            Inicializa una nueva instancia de DataGenerator
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.SeedSequentialInteger(System.Int32,System.Int32)">
            <summary>
            Establece como debe inicializarse una numeracion (Identity)
            </summary>
            <param name="seedValue">Valor de Saltos</param>
            <param name="incrementValue">Valor de Incrementación</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetSequentialInteger">
            <summary>
            Devuelve un entero secuencial (Identity)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetDate(System.DateTime,System.DateTime)">
            <summary>
            Devuelve una fecha aleatoria especificando un intervalo
            </summary>
            <param name="minValue">Valor Minimo</param>
            <param name="maxValue">Valor Maximo</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetDecimal(System.Int32,System.Int32)">
            <summary>
            Devuelve un # aleatorio especificando un rango
            </summary>
            <param name="minValue">Valor Minimo</param>
            <param name="maxValue">Valor Maximo</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetDouble(System.Int32,System.Int32)">
            <summary>
            Devuelve un # aleatorio especificando un rango
            </summary>
            <param name="minValue">Valor Minimo</param>
            <param name="maxValue">Valor Maximo</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetEmail">
            <summary>
            Devuelve un Mail Aleatorio
            </summary>
            <returns></returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetFirstName">
            <summary>
            Devuelve un Primer Nombre Aleatorio
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetUrl">
            <summary>
            Devuelve una URL aleatorio
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetCompanyName">
            <summary>
            Devuelve el nombre de una compañia de forma aleatorio
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetLastName">
            <summary>
            Devuelve un Apellido Aleatorio
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetFullName">
            <summary>
            Devuelve un nombre Completo
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetInteger(System.Int32,System.Int32)">
            <summary>
            Devuelve un entero
            </summary>
            <param name="minValue">Valor Minimo</param>
            <param name="maxValue">Valor Maximo</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetSSN">
            <summary>
            Devuelve un N° de Seguridad Social Aleatorio
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetBoolean">
            <summary>
            Devuelve un valor booleano
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetPhoneNumber">
            <summary>
            Devuelve un # Telefonico
            </summary>
            <returns></returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetZipCode">
            <summary>
            Devuelve un Codigo Postal aleatorio
            </summary>
            <returns></returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetStateAbbreviation">
            <summary>
            Devuelve una abrevación de un Estado
            </summary>
            <returns></returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetString(System.Int32)">
            <summary>
            Devuelve una cadena aleatorio especificando un ancho
            </summary>
            <param name="maxLength">Longitud Maxima</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetString(System.Int32,ErickOrlando.Utilidades.Data.StringCase)">
            <summary>
            Devuelve una cadena aleatorio especificando un ancho
            y el tipo de Case
            </summary>
            <param name="maxLength">Longitud Maxima</param>
            <param name="stringCase">Case</param>
            <returns></returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataGenerator.GetString(System.Int32,ErickOrlando.Utilidades.Data.StringCase,System.Boolean)">
            <summary>
            Devuelve una cadena aleatorio especificando un ancho
            un Case y pregunta si debe eliminar espacios
            </summary>
            <param name="maxLength">Longitud Maxima</param>
            <param name="stringCase">Case</param>
            <param name="removeSpaces">Indica si se debe remover espacios</param>
            <returns></returns>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.DataReader">
            <summary>
            Obtiene un valor de un <see cref="T:System.Data.IDataReader"/> en base al nombre del Campo
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetString(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor de Cadena
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetInt16(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor de un entero de 16 bits
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetInt32(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor de un entero de 32 bits
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetInt64(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor de un entero de 64 bits
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetBoolean(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor booleano
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetDecimal(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor Decimal
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor de Fecha
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetDouble(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor Double
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetByte(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor Byte
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetChar(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor Char
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetValue(System.Data.IDataReader,System.String)">
            <summary>
            Obtiene un valor Object
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetStringEmpty(System.Data.IDataReader,System.String)">
            <summary>
            Devuelve una cadena vacía en caso de no encontrar la columna
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetInt(System.Data.IDataReader,System.String)">
            <summary>
            Devuelve 0 (Cero) si no existe la columna
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetDecimalCero(System.Data.IDataReader,System.String)">
            <summary>
            Devuelve 0 (Cero) en caso de no encontrar el campo Decimal
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.GetDateTimeNow(System.Data.IDataReader,System.String)">
            <summary>
            Devuelve la fecha actual en caso de no encontrar el campo
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.DataReader.ExisteCampo(System.Data.IDataReader,System.String)">
            <summary>
            Permite saber si existe un campo en el IDataReader
            </summary>
            <param name="dr">IDataReader que se usará</param>
            <param name="nombre">Nombre del Campo</param>
            <returns>bool</returns>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.FechaHora">
            <summary>
            Contiene funciones estáticas para manejar Fechas y Horas
            </summary>
            <remarks>Erick Orlando © 2012</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.FechaHora.FormatoDate(System.DateTime)">
            <summary>
            Permite convertir un valor de Fecha en un Entero
            </summary>
            <param name="Fecha">Valor de FechaHora</param>
            <returns>Un entero con el formato YYMMDD</returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.FechaHora.FormatoTime(System.DateTime)">
            <summary>
            Permite convertir un valor de Hora en un Entero
            </summary>
            <param name="Dato">Valor de FechaHora</param>
            <returns>Un entero con el formato HHMMSS (Formato 24h)</returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.FechaHora.FormatoDate(System.Int32)">
            <summary>
            Convierte un valor de Fecha representado como entero a un DateTime
            </summary>
            <param name="Fecha">Entero que contiene la Fecha</param>
            <returns>Devuelve un DateTime que contiene la Fecha</returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.FechaHora.FormatoTime(System.Int32)">
            <summary>
            Convierte un valor de Hora representada como Entero a un valor String
            </summary>
            <param name="Dato">Entero que contiene la Hora</param>
            <returns>Un String que contiene la Hora</returns>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.FiltroCriteria">
            <summary>
            Permite estandarizar los criterios que se pasan a un Objeto InfoList
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.FiltroCriteria.Dispose">
            <summary>
            Libera los recursos Administrados
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.FiltroCriteria.Dispose(System.Boolean)">
            <summary>
            Libera los recursos Adminitrados
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.FiltroCriteria.Finalize">
            <summary>
            Destructor de la Clase
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.FiltroCriteria.NombreCampo">
            <summary>
            Nombre del Campo a Filtrar
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.FiltroCriteria.ValorBusqueda">
            <summary>
            Valor que se enviará como filtro
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.OperationStatus">
            <summary>
            Define una respuesta común
            de operaciones de Base de Datos
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.OperationStatus.CreateFromException(System.String,System.Exception)">
            <summary>
            Permite crear un OperationStatus a partir de un Exception
            </summary>
            <param name="message">Mensaje para mostrar</param>
            <param name="ex">Objeto Exception</param>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.OperationStatus.Status">
            <summary>
            Determina si el resultado fue satisfactorio
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.OperationStatus.RecordsAffected">
            <summary>
            Cantidad de Registros afectados
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.OperationStatus.Message">
            <summary>
            Mensaje que se quiere mostrar
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.OperationStatus.OperationID">
            <summary>
            Si la operación recibe un ID aqui se coloca
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.OperationStatus.ExceptionMessage">
            <summary>
            Mensaje de la Excepcion si es que hubiese
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Data.RepositoryBase`1">
            <summary>
            Define una base para los DataContext
            </summary>
            <typeparam name="C"></typeparam>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.Dispose">
            <summary>
            Permite liberar recursos
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.ExecuteStoreCommand(System.String,System.Object[])">
            <summary>
            Permite ejecutar un Store Procedure
            </summary>
            <param name="cmdText">Nombre del SP</param>
            <param name="parameters">Coleccion de Parámetros para el SP</param>
            <returns>OperationStatus</returns>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Obtiene un registro único
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.GetList``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Obtiene una lista
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.GetList``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Devuelve un query
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.GetList``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Devuelve un Query
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.GetList``1">
            <summary>
            Obtiene una lista sin parámetros de búsqueda
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Data.RepositoryBase`1.Update``1(``0,System.String[])">
            <summary>
            Actualiza un registro
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Data.RepositoryBase`1.DataContext">
            <summary>
            Contexto de Base de Datos
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Excepciones.ExcepcionSoap">
            <summary>
            Clase que permite capturar Excepciones SOAP
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Excepciones.ExcepcionSoap.MostrarMensaje(System.Web.Services.Protocols.SoapException)">
            <summary>
            Muestra un Mensaje legible para el SoapException
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Mail.ContenidoMail">
            <summary>
            Clase que contiene Información sobre el Envío de Correos
            </summary>
            <remarks>Erick Orlando © 2012</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Mail.ContenidoMail.#ctor">
            <summary>
            Inicializa una nueva instancia de ContenidoMail
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Mail.ContenidoMail.Dispose(System.Boolean)">
            <summary>
            Elimina los recursos no utilizados
            </summary>
            <param name="disposing">Dispose</param>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.Attachment">
            <summary>
            Ruta del archivo a adjuntar
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.ListaDestinatarios">
            <summary>
            Lista de Destinatarios que irán en el Correo Electrónico
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.ListaDestinatariosCC">
            <summary>
            Lista de Destinarios con Copia  que irán en el Correo Electrónico
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.ListaDestinatariosBCC">
            <summary>
            Lista de Destinatarios con Copia Oculta que irán en el Correo Electrónico
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.CuerpoMensaje">
             <summary>
             Cuerpo del Mensaje que irá en el Correo Electrónico.
             Puede ser un HTML pero sin Estilos CSS y sin JavaScript
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.Html">
            <summary>
            Indica si el Cuerpo del Mensaje contiene HTML
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.Asunto">
            <summary>
            Asunto del Mensaje
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.ArrayValores">
            <summary>
            Array de Valores que se reemplazarán si el Cuerpo del Mensaje
            contiene parámetros de Cadena.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.RemitenteMail">
            <summary>
            Correo del Remitente
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.RemitenteNombre">
            <summary>
            Nombre del Remitente
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.PieDeCorreo">
            <summary>
            Pie del Correo en Texto sin Formato
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.PieDeCorreoHTML">
            <summary>
            Pie del Correo en HTML
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.Servidor">
            <summary>
            IP o HostName del Servidor SMTP
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.Puerto">
            <summary>
            Puerto del Servidor SMTP
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.Credenciales">
            <summary>
            Credenciales de Acceso al Servidor SMTP
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.UsarSSL">
            <summary>
            Permite saber si se usara conexion segura
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.ContenidoMail.DirectorioRecojoIIS">
            <summary>
            Directorio de Recogida IIS
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Mail.EnvioDeCorreo">
            <summary>
            Permite Enviar correos desde el lado del Servidor de Aplicaciones
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Mail.EnvioDeCorreo.EnviarEnServer(ErickOrlando.Utilidades.Mail.ContenidoMail)">
            <summary>
            Función que permite enviar Correos Electrónicos en el Servidor. Usar en Bloque Try...Catch
            </summary>
            <param name="mContenido">Clase que contiene la información del Correo a enviar</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Mail.EnvioDeCorreo.EnviarCorreo(ErickOrlando.Utilidades.Mail.ContenidoMail)">
            <summary>
            Función que permite enviar Correos Electrónicos. Usar en Bloque Try...Catch
            </summary>
            <param name="Contenido">Clase que contiene la información del Correo a enviar</param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Mail.EnvioDeCorreo.DataPortal_Execute">
            <summary>
            Ejecuta el Comando
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Mail.EnvioDeCorreo.Dispose(System.Boolean)">
            <summary>
            Permite eliminar recursos
            </summary>
            <param name="disposing">Dispose</param>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.EnvioDeCorreo.Result">
            <summary>
            Resultado si se envio o no el Correo
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Mail.EnvioDeCorreo.Contenido">
            <summary>
            Clase que contiene los datos del Email
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Properties.Resources">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.msgNoHayColumna">
            <summary>
              Busca una cadena traducida similar a No se encuentra la columa con el nombre {0}.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.msgPieDeCorreo">
             <summary>
               Busca una cadena traducida similar a -------------------------------------
            Esta cuenta se utiliza para fines informativos, favor no responder los mensajes.
            
            Trabajos Marítimos S.A.
            Av. Saenz Peña 177
            Callao - Perú 
            Telefono: 413-0400
            -------------------------------------.
             </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.msgPieDeCorreoHTML">
             <summary>
               Busca una cadena traducida similar a &lt;Font Family=&quot;Arial&quot;&gt;&lt;BR&gt;-------------------------------------&lt;BR&gt;
            Esta cuenta se utiliza para fines informativos, favor no responder los mensajes.&lt;BR&gt;&lt;BR&gt;
            &lt;BR&gt;
            Trabajos Marítimos S.A.&lt;BR&gt;
            Av. Saenz Peña 177&lt;BR&gt;
            Callao - Perú &lt;BR&gt;
            Telefono: 413-0400&lt;BR&gt;
            -------------------------------------&lt;BR&gt;&lt;/Font&gt;.
             </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.msgRemitenteEmail">
            <summary>
              Busca una cadena traducida similar a titramarsa@tramarsa.com.pe.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.msgRemitenteNombre">
            <summary>
              Busca una cadena traducida similar a TI Tramarsa.
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Properties.Resources.msgServidorEmail">
            <summary>
              Busca una cadena traducida similar a 10.72.1.71.
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Seguridad.Criptografia">
            <summary>
            Clase de Seguridad
            </summary>
            <remarks>Erick Orlando © 2008-2011</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Seguridad.Criptografia.Encrypt(System.String)">
            <summary>
            Encripta una Cadena
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Seguridad.Criptografia.Decrypt(System.String)">
            <summary>
            Desencripta una cadena
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Seguridad.Logeo">
            <summary>
            Contiene Funciones para la autenticacion del Usuario
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Seguridad.Logeo.UsuarioActual">
            <summary>
            Devuelve el Usuario Actual autenticado
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Seguridad.Logeo.NombrePlaca">
            <summary>
            Devuelve la información del Nombre de la Placa
            de la PC donde se ejecuta la aplicación
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Seguridad.Logeo.ActualizarAplicacion">
            <summary>
            Comprueba si hay actualizaciones en una aplicación ClickOnce
            </summary>
            <remarks>Erick Orlando © 2011</remarks>
        </member>
        <member name="T:ErickOrlando.Utilidades.ServiceModel.UtilitarioRest">
            <summary>
            Clase para llamar a Servicios REST
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.ServiceModel.UtilitarioRest.DeserializarJSON``2(``0,System.String,System.String)">
            <summary>
            Deserializa un Servicio REST basado en JSON
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Trazas.BaseDatosTraceListener">
            <summary>
            Permite registrar las trazas en una Base de Datos
            </summary>
            <remarks>Erick Orlando © 2012</remarks>
        </member>
        <member name="M:ErickOrlando.Utilidades.Trazas.BaseDatosTraceListener.#ctor">
            <summary>
            Permite crear una instancia de <see cref="T:ErickOrlando.Utilidades.Trazas.BaseDatosTraceListener"/>
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Trazas.BaseDatosTraceListener.Write(System.String)">
            <summary>
            Permite escribir un mensaje en el Listener
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Trazas.BaseDatosTraceListener.WriteLine(System.String)">
            <summary>
            Permite escribir un mensaje en el Listener
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Trazas.BaseDatosTraceListener.Dispose(System.Boolean)">
            <summary>
            Permite liberar recursos
            </summary>
        </member>
        <member name="P:ErickOrlando.Utilidades.Trazas.BaseDatosTraceListener.CadenaConexion">
            <summary>
            Devuelve la Cadena de Conexion
            </summary>
        </member>
        <member name="T:ErickOrlando.Utilidades.Trazas.EventLogTraceListener">
            <summary>
            Permite hacer un registro de los eventos que se realicen con la aplicación
            </summary>
        </member>
        <member name="M:ErickOrlando.Utilidades.Trazas.EventLogTraceListener.Write(System.String)">
            <summary>
            Permite escribir un mensaje en el Listener
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ErickOrlando.Utilidades.Trazas.EventLogTraceListener.WriteLine(System.String)">
            <summary>
            Permite escribir un mensaje en el Listener
            </summary>
            <param name="message"></param>
        </member>
    </members>
</doc>
